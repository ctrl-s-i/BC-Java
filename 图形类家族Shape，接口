interface Comparable {
	//和另一个图形比较面积,返回1、0、-1(大于为1，相等为0，小于为-1)
	public int compareTo(Shape shape);
}
abstract class Shape implements Comparable{
	private String color;
	public Shape(){}//无参构造方法
	public Shape(String color){//有参构造方法
		this.color=color;
	}
	public void setColor(String color){
		this.color=color;
	}
	public String getColor() {
		return color;
	} 
	public double getArea() {//求面积
		return 0;
	}
	public double getPerimeter() {//求周长
		return 0;
	} 
    //当前对象和对象s之间的大小关系（按面积的大小决定）
	public int compareTo(Shape s) {
		if (this.getArea() >= s.getArea()) {
			if (this.getArea() == s.getArea()) {
				return 0;//相等则返回0
			} else {
				return 1;//当前对象比s大，返回正1
			}
		} else {
			return -1;//当前对象比s小则返回-1
		}
	}
}
//圆
class Circle extends Shape {
		private double radius;
        //构造函数
		public Circle() {
			super();
		}
		 public Circle(double radius,String color) {
			super(color);
			this.radius = radius;
		}
		//求面积
		public double getArea() {
		        return Math.PI * radius * radius;
		  }
        //求周长
		 public double getPerimeter() {
		        return 2 * Math.PI * radius;
		  }
		public double getR() {
			return radius;
		}
		public void setR(double r) {
			this.radius = r;
		}
	 
	}
//矩形
class Rectangle extends Shape {
	    private double length;
		private double width;
        //构造函数 
		public Rectangle() {
			super();
		}
		public Rectangle(double length, double width,String color) {
			super(color);
			this.length = length;
			this.width = width;
		}
		//求面积
		public double getArea() {
	        return length * width;
		}
	   //求周长
		public double getPerimeter() {
	        return 2 *( length + width);
		}
		public double getLength() {
			return length;
		}
		public void setLength(double length) {
			this.length = length;
		}
		public double getWidth() {
			return width;
		}
		public void setWidth(double width) {
			this.width = width;
		}
}

public class TestA
{	// 主类
	public static void main(String args[]) {	// 主方法
		Shape[] shape = new Shape[2];
		Circle circle = new Circle(3.0, "红色");
		Rectangle rectangle = new Rectangle(1.0, 2.0, "蓝色");
		shape[0] = circle;
		shape[1] = rectangle;
		displayInfo(shape);
		System.out.println(circle.compareTo(rectangle));//比较大小关系
		System.out.println(rectangle.compareTo(circle));//比较大小关系
		
	}
	//此方法输出一个数组中的图形对象的信息(包括图形对象的类型、颜色、面积和周长)
	public static void displayInfo(Shape[] shapes){
		Shape shape;
		for (int i = 0; i < shapes.length; i++) {
            shape = shapes[i];
            if(i==0){
            	System.out.print("此图形为圆形");
            }else
            	System.out.print("此图形为矩形");
            System.out.println("、颜色为"+shape.getColor()+"、面积="+shape.getArea()+"、周长="+shape.getPerimeter());
        }
	}
}
